version: '3.2'

services:
  django:
    image: ghcr.io/quantum-sec/ghostwriter:2.2
    restart: unless-stopped
    env_file:
      - './.envs/.production/.django'
      - './.envs/.production/.postgres'
    volumes:
      - # staticfiles is where collectstatic will collect static files to
        # https://docs.djangoproject.com/en/dev/ref/settings/#static-root
        type: volume
        source: staticfiles
        target: /app/staticfiles
        read_only: false
      - # media is where ghostwriter will write to and serve reports as well as other local media from
        type: volume
        source: media
        target: /app/ghostwriter/media
        read_only: false
    command: /start live

  postgres:
    build:
      context: .
      dockerfile: ./compose/postgres/Dockerfile
    restart: unless-stopped
    env_file:
      - './.envs/.production/.postgres'

  redis:
    restart: unless-stopped

  queue:
    image: ghcr.io/quantum-sec/ghostwriter:2.2
    restart: unless-stopped
    env_file:
      - './.envs/.production/.django'
      - './.envs/.production/.postgres'

  nginx:
    image: nginxinc/nginx-unprivileged:stable
    restart: unless-stopped
    depends_on:
      - django
    environment:
      NGINX_ENTRYPOINT_QUIET_LOGS: 1
    volumes:
      - type: volume
        source: media
        target: /app/media
        read_only: true
        volume:
          nocopy: true
      - type: volume
        source: staticfiles
        target: /app/staticfiles
        read_only: true
        volume:
          nocopy: true
      - type: bind
        source: ./compose/nginx/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        # target: /etc/nginx/nginx.conf
        read_only: true
      - type: bind
        source: ./ssl
        target: /ssl
        read_only: true
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'
